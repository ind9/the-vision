.jumbotron.header
  .container
    .row
      .col-sm-12
        %h1 Contribute to The Vision
        %h4.lead Come, join the foce
.main
  .container
    .row
      .col-sm-12
        .card.card-block

          %h3.card-title Development Workflow Setup
          %hr/

          %p
            Head over to the
            %a{:href => "https://github.com/ind9/the-vision"} github project page
            to checkout the code and set it up. The instructions for the dev setup is documented with the project.

          %br/

          %h3.card-title Overview
          %hr/
          %p
            One of the core principles of this project is to make is very easy for an engineer to contribute to this project and be able to make modifications on the fly if components don't fit very well in the existing projects. The following section provides a full overview on how to get started with the contribution. If you need help, please reach out on
            %code #design_engineering
            channel on slack.

          %br/

          %h5 Bootstrap Customization
          %ul
            %li
              The
              %code bootstrap v^4.0.0-alpha.2
              npm has been included in the project to get the v4 version.
            %li
              The overrides, are in the
              %code components/bootstrap
              folder.
            %li
              The
              %code _variables.scss
              is one of the most powerful files that allow customization at a global level.
            %li
              For component level overrides, add a new files and include it in
              = succeed "." do
                %code bootstrap.scss
              An example of this is
              = succeed "." do
                %code _navbar-override.scss

          %br/

          %h5 Middleman
          %p
            The project uses
            %a{:href => "https://middlemanapp.com/"} Middleman
            to house the project.

          %br/

          %h5 Components
          %p
            Components are of two types; There are
            %b styled elements
            and
            = succeed "." do
              %b custom components
            An example of a styled element is a button, which is just a CSS mod on a bootstrap element. The custom components on the other hand demand a React component of its own.

          %br/

          %h5 Technologies
          %p Familiarize yourself with the following technologies to speed up development on the project.
          %ul
            %li
              This framework is built with
              %a{:href => "http://v4-alpha.getbootstrap.com/"} Twitter Bootstrap v4
              as the base. Be very familiar with this, otherwise, you're about to reinvent the wheel.
            %li
              To organize the components,
              %a{:href => "https://facebook.github.io/react/"} ReactJS from Facebook
              is used.
            %li
              The markdown in most views is powered by
              = succeed "." do
                %a{:href => "http://jade-lang.com/"} Jade
            %li
              Fonts are loaded from
              = succeed "." do
                %a{:href => "https://typekit.com/"} Typekit
            %li
              Development workflows involve
              = succeed "," do
                %a{:href => "http://gulpjs.com/"} gulp
              %a{:href => "https://webpack.github.io/"} webpack
              and
              = succeed "." do
                %a{:href => "https://www.npmjs.com/"} npm

          %br/

          %h3.card-title Adding a New Component
          %hr/

          %h5.text-danger Check bootstrap first, always!
          %p.text-danger Bootstap has evolved extremely well and houses so many components that practically fill every basic need. So, before going ahead and creating one, please, please do check if it already exists.
          %br/

          %h5 Housing the Component

          %p Every component needs a place in the project, so that it can be developed and showcased. Follow the steps below to do so.
          %ol
            %li
              Create a new page under
              %code source
              folder.
            %li This page will initially serve as the development environment for the component.
            %li Once complete, it can also take in the demonstration and documentation for that component.

          %br/

          %h5 Adding a Styled Element
          %ol
            %li
              Refer to the existing customizations in the
              %code components/bootstrap
              folder.
            %li If any of those logically extends the customization, then add the code there. Else, create a new file for it.
            %li Check the details below in the document to get details about how to how to showcase it.

          %br/

          %h5 Adding a Custom Component

          %ol
            %li
              Create a new component folder under the
              %code components
              folder.
            %li Create the javascript file that powers the functionality of the component. Be sure to make this a react component.
            %li Add styles to the same folder.
            %li
              Add a reference to the components in
              = succeed "," do
                %code components/core.js
              so that it's bundled with the output file, which is
              = succeed "." do
                %code indix-ui.js

          %br/

          %h5 Showcasing the Component

          %ol
            %li
              The component can be showcased in the same page as it was developed. For example, if the new component is call
              = succeed "," do
                %code breadcrumbs
              then the page URL would be
              = succeed "." do
                %code /breadcrumbs.html
            %li Add documentation around how to use this component in the same page, and voila, you're done!

          %br/

          %h5 Pull Requests
          %p The final step is to get your code in. Remember, never commit to master. Develop everything in a branch, have it reviewed by one of the contributors on this project and merge it.

          %br/

          %h3 Publishing Documentation to Github
          %hr/
          Run
          %code npm run publish-page -- "&lt;commit msg&gt;"

          %br/
          %center
            %img{:src => "./images/contribute-force.jpg"}/
